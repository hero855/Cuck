---
import CubeScene from "@/components/CubeScene";
import scope from "astro:scope";
---

<div
    class="absolute top-0 bottom-0 left-0 right-0 z-50 w-full h-screen overflow-hidden group"
    id="loading-screen"
    data-loaded="false"
    data-entered="false"
>
    <!-- <div
        class="absolute z-50 grid bg-gray-700 group-data-[entered=true]:bg-transparent transition-colors size-full place-items-center"
    >
        <div
            class="size-full opacity-0 group-data-[loaded=true]:opacity-100 group-data-[loaded=true]:group-data-[entered=true]:opacity-0 transition-opacity ease-in-out delay-150 duration-300"
        >
            <button class="pointer-events-auto" id="loading-screen-button"
                >Начать приключение</button
            >
            <script lang="ts">
                document
                    .getElementById("loading-screen-button")
                    .addEventListener("click", () => {
                        document.getElementById(
                            "loading-screen"
                        ).dataset.entered = "true";
                        return false;
                    });
            </script>
        </div>
        <div
            class="group-data-[loaded=true]:opacity-0 flex flex-col items-center justify-center transition-opacity ease-in-out delay-150 duration-300"
        >
            <span class="fixed flex w-32 h-32">
                <span
                    class="absolute inline-flex w-full h-full rounded-full opacity-75 animate-ping bg-green-400/30"
                ></span>
                <span
                    class="relative inline-flex w-32 h-32 rounded-full bg-green-500/30"
                ></span>
            </span>
            <div class="fixed">
                <h2 class="text-xl font-semibold text-center text-white">
                    Приготовьтесь к свежим открытиям...
                </h2>
                <p class="w-1/2 mx-auto text-center text-white">
                    This may take a few seconds, please don't close this page.
                </p>
            </div>
        </div>
    </div> -->
    <!-- <div class="absolute size-full">
        <CubeScene client:load />
    </div> -->

    <canvas id={`canvas3d-${scope}`}></canvas>

    <script>
        /*  emitEvent: ƒ emitEvent(s)
            emitEventReverse: ƒ emitEventReverse(s)
            intensity: undefined
            name: "CUCKmber"
            page: "Scene 1"
            parentUuid: "2d3a9611-bfbb-43b3-ab02-adb4eaada2f2"
            position: E {
                x: 1.9653399007029635, 
                y: 1.054589867591858, 
                z: -0.24195627868175507
            }
            rotation: ir {
                "isEuler": true,
                "_x": 2.8697173598094836,
                "_y": 1.1120978401053763,
                "_z": 1.6311621098990423,
                "_order": "XYZ"
            }
            scale: E {
                x: 1.856998085975647, 
                y: 0.5777410864830017, 
                z: 0.5777410268783569
            }
            type: "Mesh"
            uuid: "671f7e04-23c2-4bff-8bff-e93e13d76448"
            visible: bool                                        */
        
        import { Application } from '@splinetool/runtime';
        import scope from "astro:scope";

        const CUCK_SCENE_URI = "https://prod.spline.design/LCB0iCzduGXLMKYX/scene.splinecode"
        const HOVER_SCENE_URI = "https://prod.spline.design/qwFBCPU8opEFsdXi/scene.splinecode";

        const app = new Application(document.getElementById(`canvas3d-${scope}`));
        app.load(HOVER_SCENE_URI)
            .then(() => {

                const CUCK = app.findObjectById('671f7e04-23c2-4bff-8bff-e93e13d76448');

                console.log(CUCK);  

                CUCK.position.x += Math.random() * 1;
                
            });

    </script>
</div>
    