---

---

<canvas id="GLSLWaves" class="fixed top-0 left-0 w-full h-full -z-10"></canvas>

<script>
    const initShader = async () => {
        const canvas = document.getElementById('GLSLWaves') as HTMLCanvasElement
        const gl = canvas.getContext('webgl')

        if (!gl) {
            console.error('WebGL not supported')
            return
        }

        // Fetch shader source
        const response = await fetch('/shaders/waves.frag')
        const fragmentShaderSource = await response.text()

        // Vertex shader source
        const vertexShaderSource = `
      attribute vec2 position;
      void main() {
        gl_Position = vec4(position, 0.0, 1.0);
      }
    `

        // Create shaders
        const vertexShader = gl.createShader(gl.VERTEX_SHADER)
        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)

        gl.shaderSource(vertexShader, vertexShaderSource)
        gl.shaderSource(fragmentShader, fragmentShaderSource)

        gl.compileShader(vertexShader)
        gl.compileShader(fragmentShader)

        // Create program
        const program = gl.createProgram()
        gl.attachShader(program, vertexShader)
        gl.attachShader(program, fragmentShader)
        gl.linkProgram(program)
        gl.useProgram(program)

        // Set up rectangle
        const buffer = gl.createBuffer()
        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)
        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]), gl.STATIC_DRAW)

        // Set up attributes and uniforms
        const positionLocation = gl.getAttribLocation(program, 'position')
        gl.enableVertexAttribArray(positionLocation)
        gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0)

        const resolutionLocation = gl.getUniformLocation(program, 'u_resolution')
        const timeLocation = gl.getUniformLocation(program, 'u_time')

        // Animation loop
        let startTime = Date.now()

        function render() {
            // Update canvas size
            const width = window.innerWidth
            const height = window.innerHeight
            canvas.width = width
            canvas.height = height
            gl.viewport(0, 0, width, height)

            // Update uniforms
            gl.uniform2f(resolutionLocation, width, height)
            gl.uniform1f(timeLocation, (Date.now() - startTime) * 0.001)

            // Enable blending
            gl.enable(gl.BLEND)
            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)

            // Draw
            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)
            requestAnimationFrame(render)
        }

        render()
    }

    // Initialize when DOM is loaded
    document.addEventListener('DOMContentLoaded', initShader)
</script>

